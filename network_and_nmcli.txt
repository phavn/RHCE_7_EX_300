##### Network/nmcli #####

	### NMCLI ###
     - Note: changes made by nmcli command are persistent

	 - Show brief overview of all interfaces
	 	# nmcli dev status
	 - Show overview of connections/interfaces
	 	# nmcli con show
	 - Show network interface details
	 	# nmcli con show <iface>
	 - Show nmcli man examples
	 	# man nmcli-examples
	 - Description of settings and properties of NetworkManager connection profiles
		# man nm-settings
	 - Internet connectivity check
	 	# nm-online

	 - Create new connection with static address
	 	# nmcli con add con-name "newcon" ifname eth0 autoconnect no type ethernet ip4 10.0.0.0/24 gw4 10.0.0.1
	 - Create a new connection with dhcp. dhcp is set by default when static ip address is not set
	 	# # nmcli con add con-name "newcon" ifname eth0 autoconnect no type ethernet
	 - Enable/disable connection
	 	# nmcli con down <name>
	 	# nmcli con up <name>
	 - Remove connection
	 	# nmcli con delete <con name>
	 - Modify connection - add DNS server. Note: /etc/resolv.conf get re-readpopulated when NetworkManager gets restarted
	 	# nmcli con mod <con name> +ipv4.dns "8.8.8.8"
	 - Edit connection or type "print" to display all connection properties
	 	# nmcli con edit <con name> 
	 		nmcli> set connection.autoconnect yes
	 		nmcli> save
	 - Enable connection on boot (ONBOOT=yes). Use nmcli con show <connection name> to display all properties
	 	# nmcli con mod <con name> connection.autoconnect=yes
	 - Reload configuration
	 	# nmcli con reload

	### IP command ###
	 - Note: changes made by ip command are not persistent
		- See the status:
			# ip addr show
			# ip route show
			# ip link show
		- Show network interface(s) status
			# ip -s link
		- Bring network device up/down
			# ip link set dev <ifname> [up|down]
		- Add ip address to interface
			# ip addr add 10.0.0.5/25 dev <ifname>
		- Show listening TCP port
			# ss -lt


	### Network Teaming ####

	- High level steps
		- Note the local device names.
		- Set local interfaces to not start automatically.
		- Set IP configuration to be disabled on local interfaces and enable it on the team connection.
		- Create the team device, specify a name.
		- Add device types based on their names.



	- Create network team interface and add slaves		

	   - Disable network interfaces from starting up on boot
	   # nmcli con mod eth0 connection.autoconnect no
	   # nmcli con mod eth1 connection.authconnect no 

	   - Disable ipv4 configuration of network interfaces. Edit config files to look like below:

		# cat ifcfg-eth0
			UUID=f7171e95-22cd-4d63-90a5-ce3427da0fa2
			IPV6_AUTOCONF=yes
			BOOTPROTO=none
			DEVICE=eth0
			ONBOOT=no
			TYPE=Ethernet
			PROXY_METHOD=none
			BROWSER_ONLY=no
			NAME=eth0


       # nmcli con add type team con-name team1 ifname team1
       # nmcli con mod team1 ipv4.addresses 192.168.100.100/24 ipv4.gateway 192.168.100.1 ipv4.dns 192.168.100.1
       # nmcli con add type ethernet con-name team1-slave1 ifname eth0 master team1
       # nmcli con add type ethernet con-name team1-slave2 ifname eth1 master team1
       # nmcli con mod team1-slave1 connection.autoconnect yes
       # nmcli con mod team1-slave2 connection.autoconnect yes
       # nmcli con up team1-slave1
       # nmcli con up team1-slave2

       Note: default runner (roundrobin, activebackup, loadbalance etc.) method gets set to roundrobin if not specified. json config file has to get passed to nmcli to change that. The syntax is a bit complex so use the below steps instead

       - To change runner method:

       # teamdctl team1 config dump

       - Grab runner snippet, modify it and place it into a json config file i.e.

       	# cat team1_config.json 

			{
			    "runner": {
			        "name": "activebackup"
			    }
			}

		# nmcli con mod team1 config team1_config.json


		- View teaming interface state
			# teamdctl team1 state

		- View teaming ports
			# teamnl team1 ports
		- View teaming options
			# teamnl team1 options
		- Monitor changes made to options, port and interface information
			# teamnl team1 monitor

		# Troubleshooting concepts to keep in mind:

			- The team interface is started when one of its port interfaces is started, but this does not start all other port interfaces as well.
			- Starting a team interface does not automatically start all port interfaces.
			- Stopping a team interface does stop all involved port interfaces.
			- Static IP connections can be started on a team interface that does not have any ports currently active.
			- DHCP connections can only be started when ports are available.


	### Routes ###

	TODO: Populate this section

	### IPv6 ###

	TODO: Populate this section
